var crypto = require("crypto");

exports.sign = function (headers, body, private_key, domain, selector) {
	if (typeof selector == "undefined") selector = "";

	return dkim_add(private_key, domain, selector, headers, body) + headers + "\r\n\r\n" + body;
};

function dkim_add(private_key, domain, selector, headers, body) {
	var from_header = "", to_header = "", subject_header = "",
	    hash = crypto.createHash("sha1");

	headers = headers.split("\r\n");
	for (var i = 0; i < headers.length; i++) {
		if (headers[i].substr(0, 5).toUpperCase() == "FROM:") {
			from_header = headers[i];
		} else if (headers[i].substr(0, 3).toUpperCase() == "TO:") {
			to_header = headers[i];
		} else if (headers[i].substr(0, 8).toUpperCase() == "SUBJECT:") {
			subject_header = headers[i];
		}
	}

	from_header = dkim_qprint(from_header).replace("|", "=7C");
	to_header = dkim_qprint(to_header).replace("|", "=7C");
	subject_header = dkim_qprint(subject_header).replace("|", "=7C");
	hash.update(body);

	dkim = "DKIM-Signature: v=1; a=rsa-sha1; q=dns/txt; l=" + body.length + ";" + (selector.length > 0 ? " s=" + selector + ";" : "") + "\r\n"
	     + "\tt=" + (new Date()) + "; c=simple/simple;\r\n"
	     + "\th=From:To:Subject;\r\n"
	     + "\td=" + domain + "; i=dresende@thinkdigital.pt;\r\n"
	     + "\tz=" + from_header + "\r\n"
	     + "\t|" + to_header + "\r\n"
	     + "\t|" + subject_header + ";\r\n"
	     + "\tbh=" + hash.digest("base64") + ";\r\n"
	     + "\tb=";
	dkim += dkim_sign(private_key, from_header + "\r\n" + to_header + "\r\n" + subject_header + "\r\n" + dkim) + "\r\n";

	return dkim;
};

function dkim_qprint(str) {
	return str;
};

function dkim_sign(private_key, str) {
	var s = crypto.createSign("sha1");
	return s.sign(private_key, "base64");
};
